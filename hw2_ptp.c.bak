#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <fcntl.h>
#include <time.h>
#include <string.h>
#include <sys/ioctl.h>

#include <linux/ptp_clock.h>

#define PTPCHN1 "/dev/ptp1"

int fd, cnt;
struct ptp_clock_caps caps;
struct ptp_extts_event extts_event;
struct ptp_extts_request extts_request;

int main(int argc, char *charv[])
{
  fd = open(PTPCHN1, O_RDWR);
  if(fd < 0)
  {
    fprintf(stderr, "ptp device not correctly loaded\n");
    return -1;
  }
  
  memset(&extts_request, 0, sizeof(extts_request));
  extts_request.index = 1;
  extts_request.flags = PTP_ENABLE_FEATURE | PTP_RISING_EDGE;
  
  if (ioctl(fd, PTP_EXTTS_REQUEST, &extts_request)) {
    perror("PTP_EXTTS_REQUEST");
  } else {
    fprintf(stdout, "Request successful!\n");
  }

  fprintf(stdout, "Waiting for event\n");
	cnt = read(fd, &extts_event, sizeof(extts_event));
  if (cnt != sizeof(event)) {
    perror("read");
    break;
  }
  
  // Closing the ptp1 channel
  extts_request.flags = 0;
  ioctl(fd, PTP_EXTTS_REQUEST, &extts_request);
  close(fd);

  fprintf(stdout, "I am done.\n");
  return 0;
}